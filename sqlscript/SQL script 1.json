{
	"name": "SQL script 1",
	"properties": {
		"content": {
			"query": "\n--https://microsoftlearning.github.io/dp-203-azure-data-engineer/Instructions/Labs/09-Load-Data-into-Data-Warehouse.html\n\n COPY INTO dbo.StageProduct\n     (ProductID, ProductName, ProductCategory, Color, Size, ListPrice, Discontinued)\n FROM 'https://datalakej9ks3i4.blob.core.windows.net/files/data/Product.csv'\n WITH\n (\n     FILE_TYPE = 'CSV',\n     MAXERRORS = 0,\n     IDENTITY_INSERT = 'OFF',\n     FIRSTROW = 2 --Skip header row\n );\n\n\n SELECT COUNT(1) \n FROM dbo.StageProduct\n \n\n  COPY INTO dbo.StageCustomer\n (GeographyKey, CustomerAlternateKey, Title, FirstName, MiddleName, LastName, NameStyle, BirthDate, \n MaritalStatus, Suffix, Gender, EmailAddress, YearlyIncome, TotalChildren, NumberChildrenAtHome, EnglishEducation, \n SpanishEducation, FrenchEducation, EnglishOccupation, SpanishOccupation, FrenchOccupation, HouseOwnerFlag, \n NumberCarsOwned, AddressLine1, AddressLine2, Phone, DateFirstPurchase, CommuteDistance)\n FROM 'https://datalakej9ks3i4.dfs.core.windows.net/files/data/Customer.csv'\n WITH\n (\n FILE_TYPE = 'CSV'\n ,MAXERRORS = 5\n ,FIRSTROW = 2 -- skip header row\n ,ERRORFILE = 'https://datalakej9ks3i4-.dfs.core.windows.net/files/'\n );\n\n  SELECT *\n FROM dbo.StageCustomer\n\n\n  CREATE TABLE dbo.DimProduct\n WITH\n (\n     DISTRIBUTION = HASH(ProductAltKey),\n     CLUSTERED COLUMNSTORE INDEX\n )\n AS\n SELECT ROW_NUMBER() OVER(ORDER BY ProductID) AS ProductKey,\n     ProductID AS ProductAltKey,\n     ProductName,\n     ProductCategory,\n     Color,\n     Size,\n     ListPrice,\n     Discontinued\n FROM dbo.StageProduct;\n\n  SELECT ProductKey,\n     ProductAltKey,\n     ProductName,\n     ProductCategory,\n     Color,\n     Size,\n     ListPrice,\n     Discontinued\n FROM dbo.DimProduct;\n\n  INSERT INTO dbo.DimCustomer ([GeographyKey],[CustomerAlternateKey],[Title],[FirstName],[MiddleName],[LastName],[NameStyle],[BirthDate],[MaritalStatus],\n [Suffix],[Gender],[EmailAddress],[YearlyIncome],[TotalChildren],[NumberChildrenAtHome],[EnglishEducation],[SpanishEducation],[FrenchEducation],\n [EnglishOccupation],[SpanishOccupation],[FrenchOccupation],[HouseOwnerFlag],[NumberCarsOwned],[AddressLine1],[AddressLine2],[Phone],\n [DateFirstPurchase],[CommuteDistance])\n SELECT *\n FROM dbo.StageCustomer AS stg\n WHERE NOT EXISTS\n     (SELECT * FROM dbo.DimCustomer AS dim\n     WHERE dim.CustomerAlternateKey = stg.CustomerAlternateKey);\n\n -- Type 1 updates (change name, email, or phone in place)\n UPDATE dbo.DimCustomer\n SET LastName = stg.LastName,\n     EmailAddress = stg.EmailAddress,\n     Phone = stg.Phone\n FROM DimCustomer dim inner join StageCustomer stg\n ON dim.CustomerAlternateKey = stg.CustomerAlternateKey\n WHERE dim.LastName <> stg.LastName OR dim.EmailAddress <> stg.EmailAddress OR dim.Phone <> stg.Phone\n\n -- Type 2 updates (address changes triggers new entry)\n INSERT INTO dbo.DimCustomer\n SELECT stg.GeographyKey,stg.CustomerAlternateKey,stg.Title,stg.FirstName,stg.MiddleName,stg.LastName,stg.NameStyle,stg.BirthDate,stg.MaritalStatus,\n stg.Suffix,stg.Gender,stg.EmailAddress,stg.YearlyIncome,stg.TotalChildren,stg.NumberChildrenAtHome,stg.EnglishEducation,stg.SpanishEducation,stg.FrenchEducation,\n stg.EnglishOccupation,stg.SpanishOccupation,stg.FrenchOccupation,stg.HouseOwnerFlag,stg.NumberCarsOwned,stg.AddressLine1,stg.AddressLine2,stg.Phone,\n stg.DateFirstPurchase,stg.CommuteDistance\n FROM dbo.StageCustomer AS stg\n JOIN dbo.DimCustomer AS dim\n ON stg.CustomerAlternateKey = dim.CustomerAlternateKey\n AND stg.AddressLine1 <> dim.AddressLine1;\n\n ALTER INDEX ALL ON dbo.DimProduct REBUILD;\n\n  CREATE STATISTICS customergeo_stats\n ON dbo.DimCustomer (GeographyKey);\n\n\n\n\n ",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "sqlj9ks3i4",
				"poolName": "sqlj9ks3i4"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}